---
name: resource-update

on:
  workflow_dispatch:
    inputs:
      base-branch-name:
        description: "base branch name"
        required: false
        default: "master"

jobs:
  update-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v3.6.0
        with:
          node-version-file: frontend/.node-version
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: ncu install
        run: bash "${GITHUB_WORKSPACE}/scripts/resource_update/update.sh"
      - uses: dev-hato/actions-diff-pr-management@v1.1.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          branch-name-prefix: ${{ github.event.inputs.base-branch-name }}-update-frontend
          pr-title-prefix: Update frontend

  update-test-e2e:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test/e2e
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v3.6.0
        with:
          node-version-file: test/e2e/.node-version
          cache: npm
          cache-dependency-path: test/e2e/package-lock.json
      - name: ncu install
        run: bash "${GITHUB_WORKSPACE}/scripts/resource_update/update.sh"
      - uses: dev-hato/actions-diff-pr-management@v1.1.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          branch-name-prefix: ${{ github.event.inputs.base-branch-name }}-update-test-e2e
          pr-title-prefix: Update test/e2e

  update-go:
    runs-on: ubuntu-latest
    env:
      REPOSITORY: ${{github.repository}}
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get Go version
        id: get_go_version
        run: bash "${GITHUB_WORKSPACE}/scripts/get_go_version.sh"
      - name: Set up Go
        uses: actions/setup-go@v3.5.0
        with:
          go-version: ${{steps.get_go_version.outputs.go_version}}
      - name: go mod update
        run: bash "${GITHUB_WORKSPACE}/scripts/resource_update/update_go/run_go_mod_tidy.sh"
      - uses: dev-hato/actions-diff-pr-management@v1.1.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          branch-name-prefix: ${{ github.event.inputs.base-branch-name }}-update-go
          pr-title-prefix: Update go
