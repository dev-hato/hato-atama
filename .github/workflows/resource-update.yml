---
name: resource-update

on:
  workflow_dispatch:
    inputs:
      base-branch-name:
        description: "base branch name"
        required: false
        default: "master"

jobs:
  update-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v3.0.0
        with:
          node-version-file: frontend/.node-version
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: ncu install
        run: npx npm-check-updates -u
      - name: npm update
        run: npm install
      - run: |
          COMMITTER="github-actions[bot]"
          COMMITTER+=" <41898282+github-actions[bot]@users.noreply.github.com>"
          echo "COMMITTER=${COMMITTER}" >> "${GITHUB_ENV}"
          AUTHOR="${{ github.actor }}"
          AUTHOR+=" <${{ github.actor }}@users.noreply.github.com>"
          echo "AUTHOR=${AUTHOR}" >> "${GITHUB_ENV}"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3.14.0
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          commit-message: Update frontend
          committer: ${{ env.COMMITTER }}
          author: ${{ env.AUTHOR }}
          signoff: false
          branch: ${{ github.event.inputs.base-branch-name }}-update-frontend
          base: ${{ github.event.inputs.base-branch-name }}
          delete-branch: true
          title: "Update frontend"
          body: |

          draft: false

  update-test-e2e:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test/e2e
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v3.0.0
        with:
          node-version-file: test/e2e/.node-version
          cache: npm
          cache-dependency-path: test/e2e/package-lock.json
      - name: ncu install
        run: npx npm-check-updates -u
      - name: npm update
        run: npm install
      - run: |
          COMMITTER="github-actions[bot]"
          COMMITTER+=" <41898282+github-actions[bot]@users.noreply.github.com>"
          echo "COMMITTER=${COMMITTER}" >> "${GITHUB_ENV}"
          AUTHOR="${{ github.actor }}"
          AUTHOR+=" <${{ github.actor }}@users.noreply.github.com>"
          echo "AUTHOR=${AUTHOR}" >> "${GITHUB_ENV}"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3.14.0
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          commit-message: Update test/e2e
          committer: ${{ env.COMMITTER }}
          author: ${{ env.AUTHOR }}
          signoff: false
          branch: ${{ github.event.inputs.base-branch-name }}-update-test-e2e
          base: ${{ github.event.inputs.base-branch-name }}
          delete-branch: true
          title: "Update test/e2e"
          body: |

          draft: false

  update-go:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get Go version
        id: get_go_version
        run: |
          image_name=hato_atama_server_build
          docker build -t "${image_name}" --target build -f server/Dockerfile .
          DOCKER_CMD="go version | awk '{print \$3}' | sed -e 's/^go//g'"
          go_version=$(docker run ${image_name} sh -c "${DOCKER_CMD}")
          echo "Go version:" "${go_version}"
          echo "::set-output name=go_version::${go_version}"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{steps.get_go_version.outputs.go_version}}
      - name: go mod update
        run: go get -u ./...
      - name: go mod tidy
        run: go mod tidy
      - run: |
          COMMITTER="github-actions[bot]"
          COMMITTER+=" <41898282+github-actions[bot]@users.noreply.github.com>"
          echo "COMMITTER=${COMMITTER}" >> "${GITHUB_ENV}"
          AUTHOR="${{ github.actor }}"
          AUTHOR+=" <${{ github.actor }}@users.noreply.github.com>"
          echo "AUTHOR=${AUTHOR}" >> "${GITHUB_ENV}"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3.14.0
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          commit-message: Update go
          committer: ${{ env.COMMITTER }}
          author: ${{ env.AUTHOR }}
          signoff: false
          branch: ${{ github.event.inputs.base-branch-name }}-update-go
          base: ${{ github.event.inputs.base-branch-name }}
          delete-branch: true
          title: "Update go"
          body: |

          draft: false
