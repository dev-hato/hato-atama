---
name: update-nodejs

on:
  pull_request:

jobs:
  # npm installを実行し、package.jsonやpackage-lock.jsonに差分があればPRを作る
  update-package:
    runs-on: ubuntu-latest
    needs: update-version
    strategy:
      matrix:
        directory: ['frontend', 'test/e2e', '.']
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get branch name
        id: get_branch_name
        run: |
          BRANCH_NAME="$(echo '${{ matrix.directory }}' | sed -e 's:/:-:g')"
          BRANCH_NAME="${BRANCH_NAME//\./root}"
          echo "::set-output name=branch_name::${BRANCH_NAME}"
      - uses: actions/setup-node@v3.1.1
        with:
          node-version-file: ${{ matrix.directory }}/.node-version
          cache: npm
          cache-dependency-path: ${{ matrix.directory }}/package-lock.json
      - run: |
          npm install
          npx browserslist@latest --update-db
      - name: Update elm.json
        if: matrix.directory == 'frontend'
        run: |
          sed -i -e "s/\"elm-version\": \"[0-9.-]*\"/\"elm-version\": \"$(npm ls elm | grep "elm@" | sed -e 's/.*elm@\([0-9.]*\).*/\1/g')\"/g" elm.json
      # 差分があったときは差分を出力する
      - name: Show diff
        id: diff
        run: |
          result=$(git diff)
          echo "::set-output name=result::$result"
      - run: |
          REPO_NAME="${{ github.event.pull_request.head.repo.full_name }}"
          echo "REPO_NAME=${REPO_NAME}" >> "${GITHUB_ENV}"
      # 差分があったときは、コミットを作りpushする
      - name: Push
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result != '' }}
        run: |
          git config user.name "github-actions[bot]"
          EMAIL="41898282+github-actions[bot]@users.noreply.github.com"
          git config user.email "${EMAIL}"
          git add -u
          git commit -m "鳩は唐揚げ！(自動で直してあげたよ！)"
          REPO_URL="https://"
          REPO_URL+="${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/"
          REPO_URL+="${{github.repository}}.git"
          GITHUB_HEAD="HEAD:refs/heads/fix-package-"
          GITHUB_HEAD+="${{ steps.get_branch_name.outputs.branch_name }}-"
          GITHUB_HEAD+="${HEAD_REF}"
          git push -f "${REPO_URL}" "${GITHUB_HEAD}"
      - name: Set org name
        uses: actions/github-script@v6
        if: env.REPO_NAME == github.repository
        id: set_org_name
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: return process.env.GITHUB_REPOSITORY.split('/')[0]
      - name: Get PullRequests
        uses: actions/github-script@v6
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result != '' }}
        id: get_pull_requests
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            let head = "${{steps.set_org_name.outputs.result}}:fix-package-"
            head += "${{ steps.get_branch_name.outputs.branch_name }}-"
            head += HEAD_REF
            const pulls_list_params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              head,
              base: HEAD_REF,
              state: "open"
            }
            console.log("call pulls.list:", pulls_list_params)
            const pulls = await github.paginate(github.rest.pulls.list,
                                                pulls_list_params)
            return pulls.length
      # pushしたブランチでPRを作る
      - name: Create PullRequest
        uses: actions/github-script@v6
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result != ''
          && steps.get_pull_requests.outputs.result == 0 }}
        id: create_pull_request
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            let head = "${{steps.set_org_name.outputs.result}}:fix-package-"
            head += "${{ steps.get_branch_name.outputs.branch_name }}-"
            head += HEAD_REF
            const number = "#${{github.event.pull_request.number}}"
            let title = "${{ matrix.directory }}の"
            title += "package.jsonやpackage-lock.jsonを直してあげたよ！PRをマージしてね！ "
            title += number
            const pulls_create_params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              head,
              base: HEAD_REF,
              title,
              body: "鳩の唐揚げおいしい！😋😋😋 " + number
            }
            console.log("call pulls.create:", pulls_create_params)
            const create_pull_res = await github.rest.pulls.create(
                                      pulls_create_params
                                    )
            return create_pull_res.data.number
      - name: Assign a user
        uses: actions/github-script@v6
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result != ''
          && steps.get_pull_requests.outputs.result == 0
          && github.event.pull_request.user.login != 'dependabot[bot]' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issues_add_assignees_params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{steps.create_pull_request.outputs.result}},
              assignees: ["${{github.event.pull_request.user.login}}"]
            }
            console.log("call issues.addAssignees:")
            console.log(issues_add_assignees_params)
            await github.rest.issues.addAssignees(issues_add_assignees_params)
      # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
      - name: Close PullRequest
        uses: actions/github-script@v6
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result == '' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            let head_name = "fix-package-"
            head_name += "${{ steps.get_branch_name.outputs.branch_name }}-"
            head_name += HEAD_REF
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pulls_list_params = {
              head: "${{steps.set_org_name.outputs.result}}:" + head_name,
              base: HEAD_REF,
              state: "open",
              ...common_params
            }
            console.log("call pulls.list:",pulls_list_params)
            const pulls = await github.paginate(github.rest.pulls.list,
                                                pulls_list_params)

            for (const pull of pulls) {
              const pulls_update_params = {
                pull_number: pull.number,
                state: "closed",
                ...common_params
              }
              console.log("call pulls.update:")
              console.log(pulls_update_params)
              await github.rest.pulls.update(pulls_update_params)
              const git_deleteRef_params = {
                ref: "heads/" + head_name,
                ...common_params
              }
              console.log("call git.deleteRef:", git_deleteRef_params)
              await github.rest.git.deleteRef(git_deleteRef_params)
            }
      - name: Exit
        if: ${{ steps.diff.outputs.result != '' }}
        run: exit 1

  # .node-version や package.json のNode.js・npmのバージョンをDockerイメージと同期させる
  update-version:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get Dependabot Node.js version
        id: get_dependabot_node_version
        run: |
          DOCKER_CMD="node --version && npm --version"
          mapfile -t result < <(docker run ghcr.io/dependabot/dependabot-core sh -c "${DOCKER_CMD}")
          node_version="${result[0]//v/}"
          npm_version=${result[1]}
          echo "Node.js version:" "${node_version}"
          echo "npm version:" "${npm_version}"
          echo "::set-output name=node_version::${node_version}"
          echo "::set-output name=npm_version::${npm_version}"
      - name: Get Node.js version
        id: get_node_version
        working-directory: frontend
        run: |
          image_name=hato_atama_frontend_build
          docker build -t "${image_name}" --target build -f Dockerfile ..
          DOCKER_CMD="node --version && npm --version"
          mapfile -t result < <(docker run ${image_name} sh -c "${DOCKER_CMD}")
          node_version="${result[0]//v/}"
          npm_version=${result[1]}
          echo "Node.js version:" "${node_version}"
          echo "npm version:" "${npm_version}"
          echo "::set-output name=node_version::${node_version}"
          echo "::set-output name=npm_version::${npm_version}"
      - name: Update versions
        run: |
          DEPENDABOT_NODE_VERSION="${{steps.get_dependabot_node_version.outputs.node_version}}"
          DEPENDABOT_NPM_VERSION="${{steps.get_dependabot_node_version.outputs.npm_version}}"
          NODE_VERSION="${{steps.get_node_version.outputs.node_version}}"
          NPM_VERSION="${{steps.get_node_version.outputs.npm_version}}"
          for path in "frontend" "test/e2e" "."; do
            echo "${NODE_VERSION}" > ${path}/.node-version

            NODE_PATTERN="s/\"node\": \".*\"/\"node\": \"^${DEPENDABOT_NODE_VERSION}"

            if [ "${DEPENDABOT_NODE_VERSION}" != "${NODE_VERSION}" ]
            then
              NODE_PATTERN+=" || ^${NODE_VERSION}"
            fi

            NODE_PATTERN+="\"/g"
            sed -i -e "${NODE_PATTERN}" ${path}/package.json

            NPM_PATTERN="s/\"npm\": \".*\"/\"npm\": \"^${DEPENDABOT_NPM_VERSION}"

            if [ "${DEPENDABOT_NPM_VERSION}" != "${NPM_VERSION}" ]
            then
              NPM_PATTERN+=" || ^${NPM_VERSION}"
            fi

            NPM_PATTERN+="\"/g"
            sed -i -e "${NPM_PATTERN}" ${path}/package.json
          done
      # 差分があったときは差分を出力する
      - name: Show diff
        id: diff
        run: |
          result=$(git diff)
          echo "::set-output name=result::$result"
      - run: |
          REPO_NAME="${{ github.event.pull_request.head.repo.full_name }}"
          echo "REPO_NAME=${REPO_NAME}" >> "${GITHUB_ENV}"
      # 差分があったときは、コミットを作りpushする
      - name: Push
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result != '' }}
        run: |
          git config user.name "github-actions[bot]"
          EMAIL="41898282+github-actions[bot]@users.noreply.github.com"
          git config user.email "${EMAIL}"
          git add -u
          git commit -m "鳩は唐揚げ！(自動で直してあげたよ！)"
          REPO_URL="https://"
          REPO_URL+="${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/"
          REPO_URL+="${{github.repository}}.git"
          GITHUB_HEAD="HEAD:refs/heads/fix-version-${HEAD_REF}"
          git push -f "${REPO_URL}" "${GITHUB_HEAD}"
      - name: Set org name
        uses: actions/github-script@v6
        if: env.REPO_NAME == github.repository
        id: set_org_name
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: return process.env.GITHUB_REPOSITORY.split('/')[0]
      - name: Get PullRequests
        uses: actions/github-script@v6
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result != '' }}
        id: get_pull_requests
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const pulls_list_params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: "${{steps.set_org_name.outputs.result}}:fix-version-" + HEAD_REF,
              base: HEAD_REF,
              state: "open"
            }
            console.log("call pulls.list:", pulls_list_params)
            const pulls = await github.paginate(github.rest.pulls.list,
                                                pulls_list_params)
            return pulls.length
      # pushしたブランチでPRを作る
      - name: Create PullRequest
        uses: actions/github-script@v6
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result != ''
          && steps.get_pull_requests.outputs.result == 0 }}
        id: create_pull_request
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const number = "#${{github.event.pull_request.number}}"
            let title = ".node-versionを直してあげたよ！PRをマージしてね！ "
            title += number
            const pulls_create_params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: "${{steps.set_org_name.outputs.result}}:fix-version-" + HEAD_REF,
              base: HEAD_REF,
              title,
              body: "鳩の唐揚げおいしい！😋😋😋 " + number
            }
            console.log("call pulls.create:", pulls_create_params)
            const create_pull_res = await github.rest.pulls.create(
                                      pulls_create_params
                                    )
            return create_pull_res.data.number
      - name: Assign a user
        uses: actions/github-script@v6
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result != ''
          && steps.get_pull_requests.outputs.result == 0
          && github.event.pull_request.user.login != 'dependabot[bot]' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issues_add_assignees_params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{steps.create_pull_request.outputs.result}},
              assignees: ["${{github.event.pull_request.user.login}}"]
            }
            console.log("call issues.addAssignees:")
            console.log(issues_add_assignees_params)
            await github.rest.issues.addAssignees(issues_add_assignees_params)
      # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
      - name: Close PullRequest
        uses: actions/github-script@v6
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ env.REPO_NAME == github.repository
          && steps.diff.outputs.result == '' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const head_name = "fix-version-" + HEAD_REF
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pulls_list_params = {
              head: "${{steps.set_org_name.outputs.result}}:" + head_name,
              base: HEAD_REF,
              state: "open",
              ...common_params
            }
            console.log("call pulls.list:", pulls_list_params)
            const pulls = await github.paginate(github.rest.pulls.list,
                                                pulls_list_params)

            for (const pull of pulls) {
              const pulls_update_params = {
                pull_number: pull.number,
                state: "closed",
                ...common_params
              }
              console.log("call pulls.update:", pulls_update_params)
              await github.rest.pulls.update(pulls_update_params)
              const git_deleteRef_params = {
                ref: "heads/" + head_name,
                ...common_params
              }
              console.log("call git.deleteRef:", git_deleteRef_params)
              await github.rest.git.deleteRef(git_deleteRef_params)
            }
      - name: Exit
        if: ${{ steps.diff.outputs.result != '' }}
        run: exit 1
