name: update nodejs

on:
  pull_request:

jobs:
  # npm installを実行し、package.jsonやpackage-lock.jsonに差分があればPRを作る
  update-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [ 'frontend', 'test/e2e', '.' ]
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v2
      - name: Get branch name
        id: get_branch_name
        run: echo "::set-output name=branch_name::$(echo '${{ matrix.directory }}' | sed -e 's:/:-:g' | sed -e 's/\./root/g')"
      - name: Get Node.js version
        id: get_node_version
        run: |
          node_version=$(cat .node-version)
          echo "Node.js version:" "${node_version}"
          echo "::set-output name=node_version::${node_version}"
      - uses: actions/setup-node@v2
        with:
          node-version: ${{steps.get_node_version.outputs.node_version}}
      - name: Cache node modules ${{ matrix.directory }}
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-cache-${{ steps.get_branch_name.outputs.branch_name }}-${{ hashFiles('**/${{ matrix.directory }}/package-lock.json') }}
          restore-keys: |
            npm-cache-${{ steps.get_branch_name.outputs.branch_name }}-
      - run: npm install
      # 差分があったときは差分を出力する
      - name: Show diff
        id: diff
        run: |
          result=$(git diff)
          echo "::set-output name=result::$result"
      # 差分があったときは、コミットを作りpushする
      - name: Push
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != '' }}
        run: |
          git config user.name "hatohakaraage"
          git config user.email "hatohakaraage@example.com"
          git add -u
          git commit -m "鳩は唐揚げ！(自動で直してあげたよ！)"
          git push -f https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git "HEAD:refs/heads/fix-package-${{ steps.get_branch_name.outputs.branch_name }}-${HEAD_REF}"
      # pushしたブランチでPRを作る
      - name: Create PullRequest
        uses: actions/github-script@v4.1
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != '' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pull_params = {
              head: "dev-hato:fix-package-${{ steps.get_branch_name.outputs.branch_name }}-" + HEAD_REF,
              base: HEAD_REF,
              ...common_params
            }
            const pulls_list_params = {
              state: "open",
              ...pull_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(list_res => {
              if (list_res.data.length === 0) {
                const pulls_create_params = {
                  title: "${{ matrix.directory }}のpackage.jsonやpackage-lock.jsonを直してあげたよ！PRをマージしてね！ #${{github.event.pull_request.number}}",
                  body: "鳩の唐揚げおいしい！😋😋😋 #${{github.event.pull_request.number}}",
                  ...pull_params
                }
                console.log("call pulls.create:")
                console.log(pulls_create_params)
                github.pulls.create(pulls_create_params).then(create_res => {
                  if("${{github.event.pull_request.user.login}}" !== "dependabot[bot]") {
                    const issues_add_assignees_params = {
                      issue_number: create_res.data.number,
                      assignees: ["${{github.event.pull_request.user.login}}"],
                      ...common_params
                    }
                    console.log("call issues.addAssignees:")
                    console.log(issues_add_assignees_params)
                    github.issues.addAssignees(issues_add_assignees_params)
                  }
                })
              }
            })
      # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
      - name: Close PullRequest
        uses: actions/github-script@v4.1
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result == '' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const head_name = "fix-package-${{ steps.get_branch_name.outputs.branch_name }}-" + HEAD_REF
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pulls_list_params = {
              head: "dev-hato:" + head_name,
              base: HEAD_REF,
              state: "open",
              ...common_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(res => {
              for(const data of res.data){
                const pulls_update_params = {
                  pull_number: data.number,
                  state: "closed",
                  ...common_params
                }
                console.log("call pulls.update:")
                console.log(pulls_update_params)
                github.pulls.update(pulls_update_params).then(res2 => {
                  const git_deleteRef_params = {
                    ref: "heads/" + head_name,
                    ...common_params
                  }
                  console.log("call git.deleteRef:")
                  console.log(git_deleteRef_params)
                  github.git.deleteRef(git_deleteRef_params)
                })
              }
            })
      - name: Exit
        if: ${{ steps.diff.outputs.result != '' }}
        run: exit 1

  # .node-version をDockerイメージと同期させる
  update-version:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    strategy:
      matrix:
        directory: [ 'frontend', 'test/e2e', '.' ]
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v2
      - name: Get branch name
        id: get_branch_name
        run: echo "::set-output name=branch_name::$(echo '${{ matrix.directory }}' | sed -e 's:/:-:g' | sed -e 's/\./root/g')"
      - name: Get Node.js version
        id: get_node_version
        working-directory: frontend
        run: |
          image_name=hato_atama_frontend_build
          docker build -t "${image_name}" --target build -f Dockerfile ..
          node_version=$(docker run ${image_name} sh -c "node --version | sed -e 's/^v//g'")
          echo "Node.js version:" "${node_version}"
          echo "::set-output name=node_version::${node_version}"
      - name: Update version
        run: echo "${{steps.get_node_version.outputs.node_version}}" > .node-version
      # 差分があったときは差分を出力する
      - name: Show diff
        id: diff
        run: |
          result=$(git diff)
          echo "::set-output name=result::$result"
      # 差分があったときは、コミットを作りpushする
      - name: Push
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != '' }}
        run: |
          git config user.name "hatohakaraage"
          git config user.email "hatohakaraage@example.com"
          git add -u
          git commit -m "鳩は唐揚げ！(自動で直してあげたよ！)"
          git push -f https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git "HEAD:refs/heads/fix-version-${{ steps.get_branch_name.outputs.branch_name }}-${HEAD_REF}"
      # pushしたブランチでPRを作る
      - name: Create PullRequest
        uses: actions/github-script@v4.1
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != '' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pull_params = {
              head: "dev-hato:fix-version-${{ steps.get_branch_name.outputs.branch_name }}-" + HEAD_REF,
              base: HEAD_REF,
              ...common_params
            }
            const pulls_list_params = {
              state: "open",
              ...pull_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(list_res => {
              if (list_res.data.length === 0) {
                const pulls_create_params = {
                  title: "${{ matrix.directory }}の.node-versionを直してあげたよ！PRをマージしてね！ #${{github.event.pull_request.number}}",
                  body: "鳩の唐揚げおいしい！😋😋😋 #${{github.event.pull_request.number}}",
                  ...pull_params
                }
                console.log("call pulls.create:")
                console.log(pulls_create_params)
                github.pulls.create(pulls_create_params).then(create_res => {
                  if("${{github.event.pull_request.user.login}}" !== "dependabot[bot]") {
                    const issues_add_assignees_params = {
                      issue_number: create_res.data.number,
                      assignees: ["${{github.event.pull_request.user.login}}"],
                      ...common_params
                    }
                    console.log("call issues.addAssignees:")
                    console.log(issues_add_assignees_params)
                    github.issues.addAssignees(issues_add_assignees_params)
                  }
                })
              }
            })
      # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
      - name: Close PullRequest
        uses: actions/github-script@v4.1
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result == '' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const head_name = "fix-version-${{ steps.get_branch_name.outputs.branch_name }}-" + HEAD_REF
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pulls_list_params = {
              head: "dev-hato:" + head_name,
              base: HEAD_REF,
              state: "open",
              ...common_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(res => {
              for(const data of res.data){
                const pulls_update_params = {
                  pull_number: data.number,
                  state: "closed",
                  ...common_params
                }
                console.log("call pulls.update:")
                console.log(pulls_update_params)
                github.pulls.update(pulls_update_params).then(res2 => {
                  const git_deleteRef_params = {
                    ref: "heads/" + head_name,
                    ...common_params
                  }
                  console.log("call git.deleteRef:")
                  console.log(git_deleteRef_params)
                  github.git.deleteRef(git_deleteRef_params)
                })
              }
            })
      - name: Exit
        if: ${{ steps.diff.outputs.result != '' }}
        run: exit 1
