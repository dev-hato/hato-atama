---
name: super-linter

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  super-linter:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.0.0
        with:
          node-version-file: .node-version
          cache: npm
      - run: npm install
      - name: Get Go version
        id: get_go_version
        run: |
          image_name=hato_atama_server_build
          docker build -t "${image_name}" --target build -f server/Dockerfile .
          CMD="go version | awk '{print \$3}' | sed -e 's/^go//g'"
          go_version=$(docker run ${image_name} sh -c "${CMD}")
          echo "Go version:" "${go_version}"
          echo "::set-output name=go_version::${go_version}"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{steps.get_go_version.outputs.go_version}}
      - name: Install Go packages
        run: |
          echo "$(go env GOPATH)/bin" >> "${GITHUB_PATH}"
          go mod vendor
      - name: Super-Linter
        uses: github/super-linter/slim@v4.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_RUNNER_DEBUG: true
          FILTER_REGEX_EXCLUDE: test/e2e/cypress/integration/.*
          LINTER_RULES_PATH: .
          PATH: /github/workspace/node_modules/.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/node_modules/.bin:/venvs/ansible-lint/bin:/venvs/black/bin:/venvs/cfn-lint/bin:/venvs/cpplint/bin:/venvs/flake8/bin:/venvs/isort/bin:/venvs/mypy/bin:/venvs/pylint/bin:/venvs/snakefmt/bin:/venvs/snakemake/bin:/venvs/sqlfluff/bin:/venvs/yamllint/bin:/venvs/yq/bin:/var/cache/dotnet/tools:/usr/share/dotnet
