name: format

on:
  pull_request:
    branches: [ master ]

jobs:
  format-go:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get Go version
        id: get_go_version
        run: |
          image_name=hato_atama_server_build
          docker build -t "${image_name}" --target build -f server/Dockerfile .
          go_version=$(docker run ${image_name} sh -c "go version | awk '{print \$3}' | sed -e 's/^go//g'")
          echo "Go version:" "${go_version}"
          echo "::set-output name=go_version::${go_version}"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{steps.get_go_version.outputs.go_version}}
      - name: Install goimports
        run: |
          echo "$(go env GOPATH)/bin" >> "${GITHUB_PATH}"
          go get -u golang.org/x/tools/cmd/goimports
      - name: Format files
        run: |
          go mod tidy
          goimports -l -w .
      # 差分があったときは差分を出力する
      - name: Show diff
        id: diff
        run: |
          result=$(git diff)
          echo "::set-output name=result::$result"
      # 差分があったときは、コミットを作りpushする
      - name: Push
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != '' }}
        run: |
          git config user.name "hatohakaraage"
          git config user.email "hatohakaraage@example.com"
          git add -u
          git commit -m "鳩は唐揚げ！(自動で直してあげたよ！)"
          git push -f https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git "HEAD:refs/heads/fix-format-${HEAD_REF}"
      - name: Get PullRequests
        uses: actions/github-script@v4.1
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != '' }}
        id: get_pull_requests
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const pulls_list_params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: "dev-hato:fix-format-" + HEAD_REF,
              base: HEAD_REF,
              state: "open"
            }
            console.log("call pulls.list:", pulls_list_params)
            const pulls = await github.paginate(github.pulls.list, pulls_list_params)
            return pulls.length
      # pushしたブランチでPRを作る
      - name: Create PullRequest
        uses: actions/github-script@v4.1
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != '' && steps.get_pull_requests.outputs.result == 0 }}
        id: create_pull_request
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const pulls_create_params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: "dev-hato:fix-format-" + HEAD_REF,
              base: HEAD_REF,
              title: "formatが間違ってたので直してあげたよ！PRをマージしてね！ #${{github.event.pull_request.number}}",
              body: "鳩の唐揚げおいしい！😋😋😋 #${{github.event.pull_request.number}}"
            }
            console.log("call pulls.create:", pulls_create_params)
            const create_pull_res = (await github.pulls.create(pulls_create_params)).data
            return create_pull_res.number
      - name: Assign a user
        uses: actions/github-script@v4.1
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != '' && steps.get_pull_requests.outputs.result == 0 && github.event.pull_request.user.login != 'dependabot[bot]' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issues_add_assignees_params = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{steps.create_pull_request.outputs.result}},
              assignees: ["${{github.event.pull_request.user.login}}"]
            }
            console.log("call issues.addAssignees:", issues_add_assignees_params)
            await github.issues.addAssignees(issues_add_assignees_params)
      # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
      - name: Close PullRequest
        uses: actions/github-script@v4.1
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result == '' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const head_name = "fix-format-" + HEAD_REF
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pulls_list_params = {
              head: "dev-hato:" + head_name,
              base: HEAD_REF,
              state: "open",
              ...common_params
            }
            console.log("call pulls.list:", pulls_list_params)
            const pulls = await github.paginate(github.pulls.list, pulls_list_params)

            for (const pull of pulls) {
              const pulls_update_params = {
                pull_number: pull.number,
                state: "closed",
                ...common_params
              }
              console.log("call pulls.update:", pulls_update_params)
              await github.pulls.update(pulls_update_params)
              const git_deleteRef_params = {
                ref: "heads/" + head_name,
                ...common_params
              }
              console.log("call git.deleteRef:", git_deleteRef_params)
              await github.git.deleteRef(git_deleteRef_params)
            }
      - name: Exit
        if: ${{ steps.diff.outputs.result != '' }}
        run: exit 1
