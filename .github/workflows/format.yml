name: format

on:
  pull_request:
    branches: [ master ]

jobs:
  format-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get Go version
        id: get_go_version
        run: |
          go_version=$(head -n 1 server/Dockerfile | awk -F [:.] '{ print $2"."$3 }')
          echo "Go version:" ${go_version}
          echo "::set-output name=go_version::${go_version}"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{steps.get_go_version.go_version}}
      - name: Install goimports
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          go get -u golang.org/x/tools/cmd/goimports
      - name: Format files
        run: |
          go mod tidy
          goimports -l -w .
      # 差分があったときは差分を出力する
      - name: Show diff
        id: diff
        run: |
          result=`git diff`
          echo "::set-output name=result::$result"
      # 差分があったときは、コミットを作りpushする
      - name: Push
        if: github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != ''
        run: |
          git config user.name "hatohakaraage"
          git config user.email "hatohakaraage@example.com"
          git add -u
          git commit -m "鳩は唐揚げ！(自動で直してあげたよ！)"
          git push -f https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:refs/heads/fix-format-${{github.event.pull_request.head.ref}}
      # pushしたブランチでPRを作る
      - name: Create PullRequest
        uses: actions/github-script@v4.0.2
        if: github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result != ''
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pull_params = {
              head: "dev-hato:fix-format-${{github.event.pull_request.head.ref}}",
              base: "${{github.event.pull_request.head.ref}}",
              ...common_params
            }
            const pulls_list_params = {
              state: "open",
              ...pull_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(list_res => {
              if (list_res.data.length === 0) {
                const pulls_create_params = {
                  title: "formatが間違ってたので直してあげたよ！PRをマージしてね！ #${{github.event.pull_request.number}}",
                  body: "鳩の唐揚げおいしい！😋😋😋 #${{github.event.pull_request.number}}",
                  ...pull_params
                }
                console.log("call pulls.create:")
                console.log(pulls_create_params)
                github.pulls.create(pulls_create_params).then(create_res => {
                  if("${{github.event.pull_request.user.login}}" !== "dependabot[bot]") {
                    const issues_add_assignees_params = {
                      issue_number: create_res.data.number,
                      assignees: ["${{github.event.pull_request.user.login}}"],
                      ...common_params
                    }
                    console.log("call issues.addAssignees:")
                    console.log(issues_add_assignees_params)
                    github.issues.addAssignees(issues_add_assignees_params)
                  }
                })
              }
            })
      # 既にformat修正のPRがある状態で、手動でformatを修正した場合、format修正のPRを閉じる
      - name: Close PullRequest
        uses: actions/github-script@v4.0.2
        if: github.event.pull_request.head.repo.full_name == github.repository && steps.diff.outputs.result == ''
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const head_name = "fix-format-${{github.event.pull_request.head.ref}}"
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const pulls_list_params = {
              head: "dev-hato:" + head_name,
              base: "${{github.event.pull_request.head.ref}}",
              state: "open",
              ...common_params
            }
            console.log("call pulls.list:")
            console.log(pulls_list_params)
            github.pulls.list(pulls_list_params).then(res => {
              for(const data of res.data){
                const pulls_update_params = {
                  pull_number: data.number,
                  state: "closed",
                  ...common_params
                }
                console.log("call pulls.update:")
                console.log(pulls_update_params)
                github.pulls.update(pulls_update_params).then(res2 => {
                  const git_deleteRef_params = {
                    ref: "heads/" + head_name,
                    ...common_params
                  }
                  console.log("call git.deleteRef:")
                  console.log(git_deleteRef_params)
                  github.git.deleteRef(git_deleteRef_params)
                })
              }
            })
      - name: Exit
        if: steps.diff.outputs.result != ''
        run: exit 1
