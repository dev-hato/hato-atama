name: remove-app-engine-versions

on:
  pull_request:
    types:
      - closed

jobs:
  remove_app_engine_versions:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get run numbers
        uses: actions/github-script@v4.1
        id: get_run_numbers
        env:
          HEAD_REF: ${{github.event.pull_request.head.ref}}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const HEAD_REF = process.env["HEAD_REF"]
            const common_params = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }
            const running = 'running'
            const retry_count = 10
            let result

            for (const i = 0; i < retry_count; i++) {
              console.log("call actions.listRepoWorkflows:")
              console.log(common_params)
              const workflows_res = await github.actions.listRepoWorkflows(common_params)
              const run_numbers = await Promise.all(workflows_res.data.workflows.map(async workflow => {
                if (workflow.name !== 'release') {
                  return
                }

                const list_workflow_runs_params = {
                  workflow_id: workflow.id,
                  branch: HEAD_REF,
                  ...common_params
                }
                console.log("call actions.listWorkflowRuns:")
                console.log(list_workflow_runs_params)
                const runs_res = await github.actions.listWorkflowRuns(list_workflow_runs_params)
                return runs_res.data.workflow_runs.map(run => {
                  if (run.status !== 'completed') {
                    return running
                  }

                  return run.run_number
                })
              }))
              result = run_numbers.flat().filter(Boolean)

              if (!result.includes(running) || i === retry_count - 1) {
                break
              }

              // 完了していないrunがあった場合はリトライ
              // sleepする時間は exponential backoff and jitter で算出している
              // 参考: https://aws.typepad.com/sajp/2015/03/backoff.html
              const sleep_seconds = Math.random() * (Math.pow(2, i + 1) * 100)
              console.log(`sleep ${sleep_seconds}s`)
              setTimeout(() => console.log('retry'), sleep_seconds * 1000)
            }

            return result
      - name: Remove app engine versions
        run: |
          for run_number in $(echo "${{steps.get_run_numbers.outputs.result}}" | jq ".[]"); do
            gcloud app versions delete --service=default "v${run_number}"
          done
