name: secretlint

# pull_requestで何かあった時に起動する
on:
  pull_request:

jobs:
  # secretlintをかけ、結果をPRにコメントとして表示する。
  lint-secretlint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # ここでsubmodule持ってくるとdetached headにcommitして死ぬ
          # submodule: 'recursive'
          fetch-depth: 0
      - name: Get Node.js version
        id: get_node_version
        run: |
          node_version=$(cat .node-version)
          echo "Node.js version:" "${node_version}"
          echo "::set-output name=node_version::${node_version}"
      - uses: actions/setup-node@v2
        with:
          node-version: ${{steps.get_node_version.outputs.node_version}}
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-cache-
      - name: npm install
        run: npm install
      # lintする
      - name: Lint files
        id: lint
        run: |
          result="$(find . -type f -not -path "./node_modules/*" -and -not -path "./.git/*" -print0 | xargs -0 npx secretlint --maskSecrets 2>&1)" || true
          echo "$result"
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo "::set-output name=result::$result"
          true
        continue-on-error: true
      # lint結果をコメントに残す
      - name: Lint Comment
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && steps.lint.outputs.result != '' }}
        uses: actions/github-script@v4.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issues_listComments_params = {
              issue_number: context.issue.number,
              owner: context.repo.owner,
             repo: context.repo.repo
            }
            console.log("call issues.listComments:")
            console.log(issues_listComments_params)
            github.issues.listComments(issues_listComments_params).then(response =>
              response.data.filter(
                comment=>comment.user.id==41898282 && comment.body.startsWith('secretlintの')
              ).map(
                comment=>comment.id
              ).forEach(
                comment_id => {
                  const issues_deleteComment_params = {
                    comment_id: comment_id,
                    owner: context.repo.owner,
                    repo: context.repo.repo
                  }
                  console.log("call issues.deleteComment:")
                  console.log(issues_deleteComment_params)
                  github.issues.deleteComment(issues_deleteComment_params)
                }
              )
            )
            const result = `${{steps.lint.outputs.result}}`
            const issues_createComment_params = {
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "secretlintのLint結果だよ！🕊🕊🕊\n```\n"+result+"\n```"
            }
            console.log("call issues.createComment:")
            console.log(issues_createComment_params)
            github.issues.createComment(issues_createComment_params)
      - name: Exit
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository && steps.lint.outcome == 'failure' }}
        run: exit 1
